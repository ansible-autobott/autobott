---
#============================================================================================================
# Headscale Role
#============================================================================================================

- name: Main Headscale installation and configuration
  tags:
    - headscale
    - servarr
    - untagged
  when: run_role_headscale | bool
  block:
    - ansible.builtin.debug:
        msg: "[INFO] the headscale role is not yet complete to use"
      changed_when: true

- name: Main Headscale installation and configuration
  when: false | bool
  block:
    - name: Set merged headscale configuration
      ansible.builtin.set_fact:
        headscale_config: "{{ headscale_defaults | combine(headscale, recursive=true) }}"

    - name: Create headscale system group
      ansible.builtin.group:
        name: "{{ headscale_config.user.group }}"
        gid: "{{ headscale_config.user.gid | default(omit, true) }}"
        state: present

    - name: Create headscale system user
      ansible.builtin.user:
        name: "{{ headscale_config.user.name }}"
        uid: "{{ headscale_config.user.uid | default(omit, true) }}"
        group: "{{ headscale_config.user.group }}"
        home: "{{ headscale_config.paths.base_dir }}"
        create_home: false
        state: present

    - name: Create Headscale directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: "{{ headscale_config.user.name }}"
        group: "{{ headscale_config.user.group }}"
      loop:
        - "{{ headscale_config.paths.base_dir }}/install"
        - "{{ headscale_config.paths.data_dir }}"
        - "{{ headscale_config.paths.ui_dir }}"

    - name: Download Headscale binary
      ansible.builtin.get_url:
        url: "https://github.com/juanfont/headscale/releases/download/v0.26.1/headscale_0.26.1_linux_amd64"
        dest: "{{ headscale_config.paths.base_dir }}/install/headscale-{{ headscale_config.version }}-amd64"
        checksum: "sha256:{{ headscale_checksums[headscale_config.version] }}"
        owner: "{{ headscale_config.user.name }}"
        group: "{{ headscale_config.user.group }}"
        mode: "0755"

    - name: Create  symlink
      ansible.builtin.file:
        src: "{{ headscale_config.paths.base_dir }}/install/headscale-{{ headscale_config.version }}-amd64"
        dest: /usr/local/bin/headscale
        state: link

    #============================================================================================================
    # UI
    #============================================================================================================

    - name: Read current installed version of the UI
      ansible.builtin.slurp:
        path: "{{ headscale_config.paths.base_dir }}/ui_version"
      register: version_marker
      failed_when: false

    - name: Set installed version fact
      ansible.builtin.set_fact:
        installed_version: "NONE"

    - name: Set installed version fact
      ansible.builtin.set_fact:
        installed_version: "{{ version_marker['content'] | b64decode | default('') }}"
      when: version_marker is defined and version_marker['content'] is defined

    - name: Download headscale UI
      when: installed_version != headscale_config.ui_version
      block:
        - name: Download headscale UI
          ansible.builtin.get_url:
            url: "https://github.com/simcu/headscale-ui/releases/download/{{ headscale_config.ui_version }}/headscale-ui-{{ headscale_config.ui_version }}.zip"
            dest: "/tmp/headscale-ui-{{ headscale_config.ui_version }}.zip"
            mode: "0644"
            checksum: "sha256:{{ headscale_UI_checksums[headscale_config.ui_version] }}"

        - name: Create temp extraction directory
          ansible.builtin.tempfile:
            state: directory
            suffix: _extract
          register: unzip_tempdir

        - name: Extract ZIP to temp location
          ansible.builtin.unarchive:
            src: "/tmp/headscale-ui-{{ headscale_config.ui_version }}.zip"
            dest: "{{ unzip_tempdir.path }}"
            remote_src: true

        - name: Sync extracted content to install path
          ansible.builtin.copy:
            src: "{{ unzip_tempdir.path }}/headscale-ui/"
            dest: "{{ headscale_config.paths.ui_dir }}"
            remote_src: true
            owner: "{{ headscale_config.user.name }}"
            group: "{{ headscale_config.user.group }}"
            mode: "0755"

        - name: Remove temporary extraction directory
          ansible.builtin.file:
            path: "{{ unzip_tempdir.path }}"
            state: absent

        - name: Write version marker file
          ansible.builtin.copy:
            content: "{{ headscale_config.ui_version }}"
            dest: "{{ headscale_config.paths.base_dir }}/ui_version"
            mode: "0644"
            owner: "{{ headscale_config.user.name }}"
            group: "{{ headscale_config.user.group }}"
          when: installed_version != headscale_config.ui_version

        - name: Remove temporary ZIP file
          ansible.builtin.file:
            path: "/tmp/headscale-ui-{{ headscale_config.ui_version }}.zip"
            state: absent
          when: installed_version != headscale_config.ui_version

    #============================================================================================================
    # Configuration
    #============================================================================================================

    - name: Ensure config dir exists
      ansible.builtin.file:
        path: /etc/headscale
        state: directory
        owner: root
        group: root
        mode: "0755"

    - name: Create Config file
      ansible.builtin.template:
        src: config.yaml
        dest: /etc/headscale/config.yaml
        owner: root
        group: root
        mode: "0644"

    #============================================================================================================
    # Service
    #============================================================================================================

    - name: Configure systemd service for Headscale
      ansible.builtin.template:
        src: service.j2
        dest: /lib/systemd/system/headscale.service
        owner: root
        group: root
        mode: "0644"
        validate: /bin/systemd-analyze verify %s
      notify:
        - reload systemd
        - restart headscale

    - name: Start Headscale service
      ansible.builtin.systemd:
        name: headscale
        enabled: true
        daemon_reload: true
        state: started
      notify:
        - reload systemd
        - restart headscale
