---
#============================================================================================================
# Run local pen test on Maria DB
#============================================================================================================
- name: Check for anonymous users
  ansible.builtin.command: >
    mysql "SELECT User, Host FROM mysql.user WHERE User='';"
  register: anon_users
  failed_when: false
  changed_when: false

- name: Fail if anonymous users exist
  ansible.builtin.fail:
    msg: "Anonymous MariaDB users found: {{ anon_users.stdout_lines }}"
  when: anon_users.stdout != ""

- name: Check for remote root login
  ansible.builtin.command: >
    mysql "SELECT User, Host FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1');"
  register: remote_root
  failed_when: false
  changed_when: false

- name: Fail if remote root login allowed
  ansible.builtin.fail:
    msg: "Remote root login allowed: {{ remote_root.stdout_lines }}"
  when: remote_root.stdout != ""

- name: Check for users with empty password
  ansible.builtin.command: >
    mysql "SELECT User, Host FROM mysql.user WHERE authentication_string = '' OR authentication_string IS NULL;"
  register: empty_pw_users
  failed_when: false
  changed_when: false

- name: Fail if users with empty passwords exist
  ansible.builtin.fail:
    msg: "Users with empty password found: {{ empty_pw_users.stdout_lines }}"
  when: empty_pw_users.stdout != ""

- name: Check if test database exists
  ansible.builtin.command: >
    mysql "SHOW DATABASES LIKE 'test';"
  register: test_db
  failed_when: false
  changed_when: false

- name: Fail if test database exists
  ansible.builtin.fail:
    msg: "Test database exists, consider removing it."
  when: test_db.stdout != ""

- name: Check if 'mysql.test' user exists (old test users)
  ansible.builtin.command: >
    mysql "SELECT User, Host FROM mysql.user WHERE User LIKE 'test%';"
  register: test_users
  failed_when: false
  changed_when: false

- name: Fail if test users exist
  ansible.builtin.fail:
    msg: "Test users found: {{ test_users.stdout_lines }}"
  when: test_users.stdout != ""

- name: Check for users with ALL privileges without GRANT OPTION
  ansible.builtin.command: >
    mysql "SELECT User, Host FROM mysql.user WHERE Super_priv='Y' AND Grant_priv='N';"
  register: super_no_grant
  failed_when: false
  changed_when: false

- name: Fail if users have SUPER but no GRANT privileges
  ansible.builtin.fail:
    msg: "Users with SUPER but no GRANT privilege: {{ super_no_grant.stdout_lines }}"
  when: super_no_grant.stdout != ""
