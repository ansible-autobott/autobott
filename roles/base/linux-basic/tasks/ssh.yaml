---
# SSH Security Configuration
# This file manages SSH daemon configuration and security settings

- name: Configure SSH security settings
  tags:
    - "linux-basic"
    - "untagged"
  block:
    - name: Install dynamic SSH banner script
      ansible.builtin.template:
        src: ssh_motd.sh
        dest: /etc/update-motd.d/10-custom
        owner: root
        group: root
        mode: "0755"
      notify: restart sshd

    - name: Fail if any sftp_jail entry does not define exactly one of group_name or user_name
      ansible.builtin.assert:
        that:
          - (item.group_name is defined) != (item.user_name is defined)
        fail_msg: >-
          Invalid sftp_jails entry: must define exactly one of 'group_name' or 'user_name', not both or neither
          ({{ item }}).
      loop: "{{ sftp_jails | default([]) }}"
      loop_control:
        label: "{{ item.group_name | default('') ~ item.user_name | default('') }}"

    - name: Deploy sshd_config
      ansible.builtin.template:
        src: sshd_config
        dest: /etc/ssh/sshd_config
        owner: root
        group: root
        mode: '0644'
        validate: "/usr/sbin/sshd -t -f %s"
      notify: restart sshd

    - name: Check ownership and permissions of sftp jail directories
      ansible.builtin.stat:
        path: "{{ item.jail_dir }}"
      loop: "{{ linux_basic.ssh.sftp_jails | default([]) }}"
      register: sftp_jail_stats
      loop_control:
        label: "/var/{{ item }}"

    - name: Ensure sftp jail directories are owned by root:root
      ansible.builtin.file:
        path: "{{ item.stat.path }}"
        owner: root
        group: root
      loop: "{{ sftp_jail_stats.results }}"
      when: item.stat.pw_name != 'root' or item.stat.gr_name != 'root'
      loop_control:
        label: "{{ item.stat.path }}"

    - name: Ensure sftp jail directories have permission 0755 or stricter
      ansible.builtin.file:
        path: "{{ item.stat.path }}"
        mode: '0755'
      loop: "{{ sftp_jail_stats.results }}"
      when: item.stat.mode|int(base=8) > 0o755
      loop_control:
        label: "{{ item.stat.path }}"

    - name: Create group for SSH password login
      ansible.builtin.group:
        name: "{{ linux_basic.ssh.pw_auth_group_name }}"
        state: present
      when:
        - linux_basic.ssh.pw_auth_group_name is defined
        - linux_basic.ssh.pw_auth_group_name | length > 0

    - name: Configure SSH password authentication for group
      ansible.builtin.blockinfile:
        path: /etc/ssh/sshd_config
        block: |
          Match Group {{ linux_basic.ssh.pw_auth_group_name }}
                  PasswordAuthentication yes
                  AuthenticationMethods password publickey
        validate: "/usr/sbin/sshd -t -f %s"
        marker: "# {mark} ANSIBLE MANAGED BLOCK - SSH PASSWORD AUTH GROUP"
      notify: restart sshd
      when:
        - linux_basic.ssh.pw_auth_group_name is defined
        - linux_basic.ssh.pw_auth_group_name | length > 0

    - name: Delete specific files added by cloud providers
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - /etc/ssh/sshd_config.d/50-cloud-init.conf # OVH: this one sets PasswordAuthentication yes
      notify: restart sshd
