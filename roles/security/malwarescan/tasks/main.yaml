---
#============================================================================================================
# Malware scanners Role
#============================================================================================================

- name: Main Malware installation and configuration
  tags:
    - malwarescan
    - untagged
  when: run_role_malwarescan | bool
  block:
    - name: Set merged malwarescan configuration
      ansible.builtin.set_fact:
        malwarescan_config: "{{ malwarescan_defaults | combine(malwarescan, recursive=true) }}"

    - name: Ensure malware scanners are installed
      apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      loop:
        - chkrootkit
        - rkhunter

    #============================================================================================================
    # chkrootkit
    #============================================================================================================

    - name: Compose chkrootkit_config_entries dictionary
      set_fact:
        chkrootkit_config_entries: >-
          {{
            {
              "RUN_DAILY": (malwarescan_config.chkrootkit.scan_daily | bool) | ternary(true, "false")
            }
          }}

    - name: Configure chkrootkit
      lineinfile:
        path: /etc/chkrootkit/chkrootkit.conf
        regexp: '^{{ item.key }}='
        line: '{{ item.key }}="{{ item.value }}"'
        create: yes
        backrefs: yes
      loop: "{{ chkrootkit_config_entries |  dict2items }}"

    # add an ignore rule for network interfaces that create false positives
    # see https://www.supertechcrew.com/chkrootkit-exclude-files-false-positive/ for details
    - name: Create chkrootkit.ignore with filtered interfaces
      copy:
        dest: /etc/chkrootkit/chkrootkit.ignore
        content: |
          ^(eth[0-9]+|ens[0-9]+): PACKET SNIFFER\(/usr/lib/systemd/systemd-networkd\[.*\]\)$
          ^br-[0-9a-f]+: not promisc and no packet sniffer sockets$
        owner: root
        group: root
        mode: '0644'

    - name: "force log expected"
      ansible.builtin.set_fact:
        renew_expected_log: True
      tags:
        - malwarescan-renew

    - name: Check if log.expected exists
      ansible.builtin.stat:
        path: /var/log/chkrootkit/log.expected
      register: log_expected_stat
      tags:
        - malwarescan-renew

    - name: Create log.expected as baseline
      when: (not log_expected_stat.stat.exists)  or (renew_expected_log is defined and renew_expected_log == True )
      tags:
        - malwarescan-renew
        - malwarescan
        - untagged
      block:
        - name: Run chkrootkit to create the baseline
          shell: /usr/sbin/chkrootkit-daily
          changed_when: false

        - name: Copy log.today to log.expected using copy module
          ansible.builtin.copy:
            src: /var/log/chkrootkit/log.today
            dest: /var/log/chkrootkit/log.expected
            remote_src: yes
            owner: root
            group: root
            mode: '0644'

    #============================================================================================================
    # rkhunter
    #============================================================================================================
    - name: Compose rkhunter_config_entries dictionary
      set_fact:
        rkhunter_config_entries:
          CRON_DAILY_RUN: "{{ malwarescan_config.rkhunter.scan_daily | bool | ternary('true', 'false') }}"
          CRON_DB_UPDATE: "{{ malwarescan_config.rkhunter.db_update | bool | ternary('true', 'false') }}"

    - name: Configure rkhunter default
      lineinfile:
        path: /etc/default/rkhunter
        regexp: '^{{ item.key }}='
        line: '{{ item.key }}={{ item.value }}'
        create: yes
        backrefs: no
      loop: "{{ rkhunter_config_entries | dict2items }}"

    - name: Manage ALLOWHIDDENFILE in rkhunter.conf
      blockinfile:
        path: /etc/rkhunter.conf
        marker: "# {mark} ANSIBLE MANAGED BLOCK: ALLOWHIDDENFILE"
        block: |
          {% for file in malwarescan_config.rkhunter.ignoredFiles %}
          ALLOWHIDDENFILE={{ file }}
          {% endfor %}

    - name: Ensure rkhunter does not allow SSH Protocol 1
      lineinfile:
        path: /etc/rkhunter.conf
        regexp: '^ALLOW_SSH_PROT_V1='
        line: 'ALLOW_SSH_PROT_V1=0'
        state: present
        backup: yes
      become: true